(car '(((a b) c) d e (f)))
(cdr (car '(((a b) c) d e (f))))
(cons (car '(( a b ) c )) (cdr '(( a b ) c )) )
(list (car '(( a b ) c )) (cdr '(( a b ) c )) )
(let ((x (append (car '((a b) c)) (cdr '((a b) c))) )) x)
(list '(a b c) (reverse '(a b c)))
(append '(a b c) (reverse '(a b c)))
(length (list '(a b c) (reverse '(a b c))))
(first (last (list-tail '(a b (c d) e (f)) 1)))
(caddr '(john jake mary jane jacob))
(car (let ((x '(a b c))) x))
(car '(let ((x (a b c))) x))
